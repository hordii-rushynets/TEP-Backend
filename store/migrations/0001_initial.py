# Generated by Django 4.2.2 on 2024-07-18 08:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('title_uk', models.CharField(max_length=128, null=True)),
                ('title_en', models.CharField(max_length=128, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_uk', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('title_uk', models.CharField(max_length=128, null=True)),
                ('title_en', models.CharField(max_length=128, null=True)),
                ('hex', models.CharField(max_length=12)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('name_uk', models.CharField(blank=True, max_length=128, null=True)),
                ('name_en', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilterField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=128, null=True)),
                ('value_uk', models.CharField(blank=True, max_length=128, null=True)),
                ('value_en', models.CharField(blank=True, max_length=128, null=True)),
                ('filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filter_field', to='store.filter')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('title_uk', models.CharField(max_length=128, null=True)),
                ('title_en', models.CharField(max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('title_uk', models.CharField(max_length=128, null=True)),
                ('title_en', models.CharField(max_length=128, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_uk', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('group_id', models.CharField(max_length=128)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('number_of_views', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('title_uk', models.CharField(max_length=128, null=True)),
                ('title_en', models.CharField(max_length=128, null=True)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('default_price', models.IntegerField(default=0)),
                ('wholesale_price', models.IntegerField(default=0)),
                ('drop_shipping_price', models.IntegerField(default=0)),
                ('main_image', models.ImageField(blank=True, upload_to='products/images/')),
                ('promotion', models.BooleanField(default=False)),
                ('promo_price', models.IntegerField(default=0)),
                ('count', models.IntegerField(default=0)),
                ('variant_order', models.IntegerField(default=0)),
                ('colors', models.ManyToManyField(blank=True, to='store.color')),
                ('filter_field', models.ManyToManyField(related_name='product_variants', to='store.filterfield')),
                ('materials', models.ManyToManyField(blank=True, to='store.material')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_variants', to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('title_uk', models.CharField(max_length=128, null=True)),
                ('title_en', models.CharField(max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=128)),
                ('amount', models.IntegerField(default=0)),
                ('percentage', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('amount', 'AMOUNT'), ('percent', 'PERCENT')], default='percent', max_length=7)),
                ('active', models.BooleanField(default=False)),
                ('products', models.ManyToManyField(to='store.productvariant')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariantInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_and_care', models.TextField()),
                ('material_and_care_uk', models.TextField(null=True)),
                ('material_and_care_en', models.TextField(null=True)),
                ('ecology_and_environment', models.TextField()),
                ('ecology_and_environment_uk', models.TextField(null=True)),
                ('ecology_and_environment_en', models.TextField(null=True)),
                ('packaging', models.TextField()),
                ('packaging_uk', models.TextField(null=True)),
                ('packaging_en', models.TextField(null=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('product_variant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='variant_info', to='store.productvariant')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariantImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='products/images/')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_images', to='store.productvariant')),
            ],
        ),
        migrations.AddField(
            model_name='productvariant',
            name='sizes',
            field=models.ManyToManyField(blank=True, to='store.size'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='filter',
            field=models.ManyToManyField(related_name='filter', to='store.filter'),
        ),
    ]
