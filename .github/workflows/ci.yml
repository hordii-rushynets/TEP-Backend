name: CI Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Compose
      run: docker-compose -f docker-compose-server.yaml up -d
      working-directory: ./
      env:
        SECRET_KEY: jfgirojorjopifrkjofjk3riofjioj34213lkj4oi31j24ioj1342j123j412412412
        POSTGRES_DB: tep
        POSTGRES_USER: tep
        POSTGRES_PASSWORD: super_pass
        POSTGRES_HOST: db
        POSTGRES_PORT: 5432
        REDIS_PASSWORD: redis

    - name: Wait for services to be ready
      run: |
        docker-compose -f docker-compose-server.yaml run web sh -c "until pg_isready -h db -U tep; do sleep 1; done"
        docker-compose -f docker-compose-server.yaml run web sh -c "until redis-cli -h redis ping; do sleep 1; done"

    - name: Run Django migrations
      run: docker-compose -f docker-compose-server.yaml exec web python manage.py migrate

    - name: Collect static files (if needed)
      run: docker-compose -f docker-compose-server.yaml exec web python manage.py collectstatic --noinput

    - name: Check Docker Compose logs
      run: docker-compose -f docker-compose-server.yaml logs web

    - name: Run Celery
      run: docker-compose -f docker-compose-server.yaml exec web celery -A backedn worker -l info

    - name: Run Celery Beat (if needed)
      run: docker-compose -f docker-compose-server.yaml exec web celery -A backedn beat -l info
